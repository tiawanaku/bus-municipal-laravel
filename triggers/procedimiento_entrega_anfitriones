DELIMITER //

CREATE PROCEDURE registrar_entrega_anfitrion (
    IN anfitrion_id BIGINT,
    IN recibido_por BIGINT,
    IN numero_autorizacion VARCHAR(255),
    IN cantidad_talonarios_preferenciales INT,
    IN rango_inicial_preferenciales INT,
    IN cantidad_talonarios_regulares INT,
    IN rango_inicial_regulares INT
)
BEGIN
    -- Variables para cálculos
    DECLARE total_tickets_preferenciales INT;
    DECLARE total_tickets_regulares INT;
    DECLARE rango_final_preferenciales INT;
    DECLARE rango_final_regulares INT;
    DECLARE total_recaudar_preferenciales DECIMAL(10,2);
    DECLARE total_recaudar_regulares DECIMAL(10,2);
    DECLARE total_recaudar DECIMAL(10,2);

    -- Variables para descuentos
    DECLARE faltante_preferencial INT;
    DECLARE faltante_regular INT;
    DECLARE done INT DEFAULT 0;

    DECLARE reg_id BIGINT;
    DECLARE cant_disp_pref INT;
    DECLARE cant_disp_reg INT;

    -- Cursores
    DECLARE cursor_pref CURSOR FOR
        SELECT id, cantidad_restante_preferencial
        FROM entrega_talonarios
        WHERE estado_preferencial = 1 AND cantidad_restante_preferencial > 0
        ORDER BY id ASC;

    DECLARE cursor_reg CURSOR FOR
        SELECT id, cantidad_restante_regular
        FROM entrega_talonarios
        WHERE estado_regular = 1 AND cantidad_restante_regular > 0
        ORDER BY id ASC;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    -- Cálculos
    SET total_tickets_preferenciales = cantidad_talonarios_preferenciales * 50;
    SET total_tickets_regulares = cantidad_talonarios_regulares * 50;

    SET rango_final_preferenciales = rango_inicial_preferenciales + total_tickets_preferenciales - 1;
    SET rango_final_regulares = rango_inicial_regulares + total_tickets_regulares - 1;

    SET total_recaudar_preferenciales = total_tickets_preferenciales * 1.00;
    SET total_recaudar_regulares = total_tickets_regulares * 1.50;
    SET total_recaudar = total_recaudar_preferenciales + total_recaudar_regulares;

    -- Insertar en entrega_talonarios_anfitrion
    INSERT INTO entrega_talonarios_anfitrion (
        anfitrion_id, recibido_por, numero_autorizacion,
        cantidad_talonarios_preferenciales, rango_inicial_preferenciales, rango_final_preferenciales,
        total_tickets_preferenciales, total_recaudar_preferenciales,
        cantidad_talonarios_regulares, rango_inicial_regulares, rango_final_regulares,
        total_tickets_regulares, total_recaudar_regulares,
        total_recaudar, fecha_entrega, created_at
    ) VALUES (
        anfitrion_id, recibido_por, numero_autorizacion,
        cantidad_talonarios_preferenciales, rango_inicial_preferenciales, rango_final_preferenciales,
        total_tickets_preferenciales, total_recaudar_preferenciales,
        cantidad_talonarios_regulares, rango_inicial_regulares, rango_final_regulares,
        total_tickets_regulares, total_recaudar_regulares,
        total_recaudar, CURDATE(), NOW()
    );

    -- Descontar preferenciales
    SET faltante_preferencial = cantidad_talonarios_preferenciales;
    OPEN cursor_pref;
    read_pref: LOOP
        FETCH cursor_pref INTO reg_id, cant_disp_pref;
        IF done = 1 THEN
            LEAVE read_pref;
        END IF;

        IF faltante_preferencial <= cant_disp_pref THEN
            UPDATE entrega_talonarios
            SET cantidad_restante_preferencial = cantidad_restante_preferencial - faltante_preferencial
            WHERE id = reg_id;
            LEAVE read_pref;
        ELSE
            UPDATE entrega_talonarios
            SET cantidad_restante_preferencial = 0
            WHERE id = reg_id;
            SET faltante_preferencial = faltante_preferencial - cant_disp_pref;
        END IF;
    END LOOP;
    CLOSE cursor_pref;

    -- Reset done flag
    SET done = 0;

    -- Descontar regulares
    SET faltante_regular = cantidad_talonarios_regulares;
    OPEN cursor_reg;
    read_reg: LOOP
        FETCH cursor_reg INTO reg_id, cant_disp_reg;
        IF done = 1 THEN
            LEAVE read_reg;
        END IF;

        IF faltante_regular <= cant_disp_reg THEN
            UPDATE entrega_talonarios
            SET cantidad_restante_regular = cantidad_restante_regular - faltante_regular
            WHERE id = reg_id;
            LEAVE read_reg;
        ELSE
            UPDATE entrega_talonarios
            SET cantidad_restante_regular = 0
            WHERE id = reg_id;
            SET faltante_regular = faltante_regular - cant_disp_reg;
        END IF;
    END LOOP;
    CLOSE cursor_reg;

END //

DELIMITER ;
