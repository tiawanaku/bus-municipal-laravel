DELIMITER $$

CREATE TRIGGER restar_cantidades_talonarios
AFTER INSERT ON entrega_talonarios
FOR EACH ROW
BEGIN
    DECLARE id_preferencial_actual INT;
    DECLARE id_regular_actual INT;

    -- === PREFERENCIALES ===
    IF NEW.cantidad_preferenciales IS NOT NULL AND NEW.cantidad_preferenciales > 0 THEN
        -- Buscar lote preferencial activo
        SELECT id INTO id_preferencial_actual
        FROM inventario_talonarios
        WHERE cajero_id = NEW.cajero_id AND estado_preferencial = 1
        ORDER BY id ASC
        LIMIT 1;

        -- Restar la cantidad entregada
        UPDATE inventario_talonarios
        SET cantidad_restante_preferencial = cantidad_restante_preferencial - NEW.cantidad_preferenciales
        WHERE id = id_preferencial_actual;

        -- Si se agotó, marcar como 0
        UPDATE inventario_talonarios
        SET estado_preferencial = 0
        WHERE id = id_preferencial_actual AND cantidad_restante_preferencial <= 0;

        -- Activar siguiente lote pendiente si no hay activo
        UPDATE inventario_talonarios
        SET estado_preferencial = 1
        WHERE id = (
            SELECT id FROM inventario_talonarios
            WHERE cajero_id = NEW.cajero_id
              AND estado_preferencial = 2
              AND cantidad_restante_preferencial > 0
            ORDER BY id ASC
            LIMIT 1
        )
        AND NOT EXISTS (
            SELECT 1 FROM inventario_talonarios
            WHERE estado_preferencial = 1 AND cajero_id = NEW.cajero_id
        );
    END IF;

    -- === REGULARES ===
    IF NEW.cantidad_regulares IS NOT NULL AND NEW.cantidad_regulares > 0 THEN
        -- Buscar lote regular activo
        SELECT id INTO id_regular_actual
        FROM inventario_talonarios
        WHERE cajero_id = NEW.cajero_id AND estado_regular = 1
        ORDER BY id ASC
        LIMIT 1;

        -- Restar la cantidad entregada
        UPDATE inventario_talonarios
        SET cantidad_restante_regular = cantidad_restante_regular - NEW.cantidad_regulares
        WHERE id = id_regular_actual;

        -- Si se agotó, marcar como 0
        UPDATE inventario_talonarios
        SET estado_regular = 0
        WHERE id = id_regular_actual AND cantidad_restante_regular <= 0;

        -- Activar siguiente lote pendiente si no hay activo
        UPDATE inventario_talonarios
        SET estado_regular = 1
        WHERE id = (
            SELECT id FROM inventario_talonarios
            WHERE cajero_id = NEW.cajero_id
              AND estado_regular = 2
              AND cantidad_restante_regular > 0
            ORDER BY id ASC
            LIMIT 1
        )
        AND NOT EXISTS (
            SELECT 1 FROM inventario_talonarios
            WHERE estado_regular = 1 AND cajero_id = NEW.cajero_id
        );
    END IF;
END$$

DELIMITER ;
