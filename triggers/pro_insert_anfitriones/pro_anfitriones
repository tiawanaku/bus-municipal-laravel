DELIMITER //

CREATE PROCEDURE entregar_talonarios_anfitrion (
    IN p_entrega_talonario_id INT,
    IN p_anfitrion_id INT,
    IN p_numero_autorizacion VARCHAR(100),
    IN p_cantidad_preferenciales INT,
    IN p_rango_inicial_preferencial INT,
    IN p_cantidad_regulares INT,
    IN p_rango_inicial_regular INT,
    IN p_fecha DATE,
    IN p_observaciones TEXT
)
BEGIN
    DECLARE cantidad_total_preferenciales INT DEFAULT p_cantidad_preferenciales;
    DECLARE cantidad_total_regulares INT DEFAULT p_cantidad_regulares;
    DECLARE rango_final_preferencial INT;
    DECLARE rango_final_regular INT;

    DECLARE total_boletos_preferenciales INT;
    DECLARE total_boletos_regulares INT;
    DECLARE total_estimado_preferenciales DECIMAL(10,2);
    DECLARE total_estimado_regulares DECIMAL(10,2);
    DECLARE total_estimado_general DECIMAL(10,2);

    DECLARE done INT DEFAULT FALSE;
    DECLARE ent_id INT;
    DECLARE ent_cantidad_pref INT;
    DECLARE ent_cantidad_reg INT;
    DECLARE primer_entrega_id INT DEFAULT NULL;

    -- Cursor para preferenciales
    DECLARE cur_pref CURSOR FOR
        SELECT id, cantidad_restante_preferencial, cantidad_restante_regular
        FROM entrega_talonarios
        WHERE cantidad_restante_preferencial > 0
        ORDER BY id ASC;

    -- Cursor para regulares
    DECLARE cur_reg CURSOR FOR
        SELECT id, cantidad_restante_preferencial, cantidad_restante_regular
        FROM entrega_talonarios
        WHERE cantidad_restante_regular > 0
        ORDER BY id ASC;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    SET rango_final_preferencial = p_rango_inicial_preferencial + (p_cantidad_preferenciales * 50) - 1;
    SET rango_final_regular = p_rango_inicial_regular + (p_cantidad_regulares * 50) - 1;

    SET total_boletos_preferenciales = p_cantidad_preferenciales * 50;
    SET total_boletos_regulares = p_cantidad_regulares * 50;

    SET total_estimado_preferenciales = total_boletos_preferenciales * 1.00;
    SET total_estimado_regulares = total_boletos_regulares * 1.50;
    SET total_estimado_general = total_estimado_preferenciales + total_estimado_regulares;

    -- Repartir talonarios preferenciales
    SET done = FALSE;
    OPEN cur_pref;
    read_loop_pref: LOOP
        FETCH cur_pref INTO ent_id, ent_cantidad_pref, ent_cantidad_reg;
        IF done THEN
            LEAVE read_loop_pref;
        END IF;

        IF cantidad_total_preferenciales > 0 AND ent_cantidad_pref > 0 THEN
            IF primer_entrega_id IS NULL THEN
                SET primer_entrega_id = ent_id;
            END IF;

            IF ent_cantidad_pref >= cantidad_total_preferenciales THEN
                UPDATE entrega_talonarios
                SET cantidad_restante_preferencial = cantidad_restante_preferencial - cantidad_total_preferenciales
                WHERE id = ent_id;
                SET cantidad_total_preferenciales = 0;
            ELSE
                UPDATE entrega_talonarios
                SET cantidad_restante_preferencial = 0
                WHERE id = ent_id;
                SET cantidad_total_preferenciales = cantidad_total_preferenciales - ent_cantidad_pref;
            END IF;
        END IF;
    END LOOP;
    CLOSE cur_pref;

    -- Repartir talonarios regulares
    SET done = FALSE;
    OPEN cur_reg;
    read_loop_reg: LOOP
        FETCH cur_reg INTO ent_id, ent_cantidad_pref, ent_cantidad_reg;
        IF done THEN
            LEAVE read_loop_reg;
        END IF;

        IF cantidad_total_regulares > 0 AND ent_cantidad_reg > 0 THEN
            IF primer_entrega_id IS NULL THEN
                SET primer_entrega_id = ent_id;
            END IF;

            IF ent_cantidad_reg >= cantidad_total_regulares THEN
                UPDATE entrega_talonarios
                SET cantidad_restante_regular = cantidad_restante_regular - cantidad_total_regulares
                WHERE id = ent_id;
                SET cantidad_total_regulares = 0;
            ELSE
                UPDATE entrega_talonarios
                SET cantidad_restante_regular = 0
                WHERE id = ent_id;
                SET cantidad_total_regulares = cantidad_total_regulares - ent_cantidad_reg;
            END IF;
        END IF;
    END LOOP;
    CLOSE cur_reg;

    -- Insertar en entrega_talonarios_anfitrion
    INSERT INTO entrega_talonarios_anfitrion (
        entrega_talonario_id,
        anfitrion_id,
        numero_autorizacion,
        cantidad_preferenciales,
        rango_inicial_preferencial,
        rango_final_preferencial,
        total_boletos_preferenciales,
        total_aproximado_bolivianos_preferencial,
        cantidad_restante_preferencial,
        cantidad_regulares,
        rango_inicial_regular,
        rango_final_regular,
        total_boletos_regulares,
        total_aproximado_bolivianos_regular,
        cantidad_restante_regular,
        estado_preferencial,
        estado_regular,
        tipo_talonarios,
        fecha_entrega,
        observaciones,
        total_recaudacion_bolivianos,
        created_at,
        updated_at
    ) VALUES (
        primer_entrega_id,
        p_anfitrion_id,
        p_numero_autorizacion,
        p_cantidad_preferenciales,
        p_rango_inicial_preferencial,
        rango_final_preferencial,
        total_boletos_preferenciales,
        total_estimado_preferenciales,
        p_cantidad_preferenciales - cantidad_total_preferenciales,
        p_cantidad_regulares,
        p_rango_inicial_regular,
        rango_final_regular,
        total_boletos_regulares,
        total_estimado_regulares,
        p_cantidad_regulares - cantidad_total_regulares,
        'pendiente',
        'pendiente',
        'mixto',
        p_fecha,
        p_observaciones,
        total_estimado_general,
        NOW(),
        NOW()
    );

END //

DELIMITER ;
