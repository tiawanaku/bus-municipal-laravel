DELIMITER //

CREATE PROCEDURE registrar_formulario_recaudo (
    IN p_bus_id INT,
    IN p_conductor_id INT,
    IN p_anfitrion_id INT,
    IN p_rutas VARCHAR(100),
    IN p_horario VARCHAR(50),
    IN p_cantidad_ventas_regulares INT,
    IN p_rango_inicial_regulares INT,
    IN p_cantidad_ventas_preferenciales INT,
    IN p_rango_inicial_preferencial INT,
    IN p_n_ficha VARCHAR(50)
)
BEGIN
    DECLARE v_rango_final_regulares INT DEFAULT 0;
    DECLARE v_rango_final_preferencial INT DEFAULT 0;
    DECLARE v_monto_recaudado_regular DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_monto_recaudado_preferencial DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_total_recaudo_regular_preferencial DECIMAL(10,2) DEFAULT 0.00;

    DECLARE v_id INT;
    DECLARE v_regulares INT;
    DECLARE v_preferenciales INT;
    DECLARE v_regulares_tal INT;
    DECLARE v_preferenciales_tal INT;

    DECLARE done INT DEFAULT FALSE;

    DECLARE cur CURSOR FOR
        SELECT id, total_boletos_regulares, total_boletos_preferenciales
        FROM entrega_talonarios_anfitrion
        WHERE anfitrion_id = p_anfitrion_id
        ORDER BY created_at ASC;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    -- Cálculos de rangos y montos
    IF p_cantidad_ventas_regulares > 0 THEN
        SET v_rango_final_regulares = p_rango_inicial_regulares + p_cantidad_ventas_regulares - 1;
        SET v_monto_recaudado_regular = p_cantidad_ventas_regulares * 1.50;
    END IF;

    IF p_cantidad_ventas_preferenciales > 0 THEN
        SET v_rango_final_preferencial = p_rango_inicial_preferencial + p_cantidad_ventas_preferenciales - 1;
        SET v_monto_recaudado_preferencial = p_cantidad_ventas_preferenciales * 1.00;
    END IF;

    SET v_total_recaudo_regular_preferencial = v_monto_recaudado_regular + v_monto_recaudado_preferencial;

    -- Insertar en formulario_recaudo
    INSERT INTO formulario_recaudo (
        bus_id,
        conductor_id,
        anfitrion_id,
        rutas,
        horario,
        cantidad_ventas_regulares,
        rango_inicial_regulares,
        rango_final_regulares,
        monto_recaudado_regular,
        cantidad_ventas_preferenciales,
        rango_inicial_preferencial,
        rango_final_preferencial,
        monto_recaudado_preferencial,
        total_recaudo_regular_preferencial,
        n_ficha,
        created_at,
        updated_at
    ) VALUES (
        p_bus_id,
        p_conductor_id,
        p_anfitrion_id,
        p_rutas,
        p_horario,
        p_cantidad_ventas_regulares,
        p_rango_inicial_regulares,
        v_rango_final_regulares,
        v_monto_recaudado_regular,
        p_cantidad_ventas_preferenciales,
        p_rango_inicial_preferencial,
        v_rango_final_preferencial,
        v_monto_recaudado_preferencial,
        v_total_recaudo_regular_preferencial,
        p_n_ficha,
        NOW(),
        NOW()
    );

    -- FIFO: Descontar boletos por fecha de entrega (created_at)
    SET v_regulares = p_cantidad_ventas_regulares;
    SET v_preferenciales = p_cantidad_ventas_preferenciales;

    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO v_id, v_regulares_tal, v_preferenciales_tal;
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- Descuento boletos regulares
        IF v_regulares > 0 THEN
            IF v_regulares_tal >= v_regulares THEN
                UPDATE entrega_talonarios_anfitrion
                SET total_boletos_regulares = total_boletos_regulares - v_regulares
                WHERE id = v_id;
                SET v_regulares = 0;
            ELSE
                UPDATE entrega_talonarios_anfitrion
                SET total_boletos_regulares = 0
                WHERE id = v_id;
                SET v_regulares = v_regulares - v_regulares_tal;
            END IF;
        END IF;

        -- Descuento boletos preferenciales
        IF v_preferenciales > 0 THEN
            IF v_preferenciales_tal >= v_preferenciales THEN
                UPDATE entrega_talonarios_anfitrion
                SET total_boletos_preferenciales = total_boletos_preferenciales - v_preferenciales
                WHERE id = v_id;
                SET v_preferenciales = 0;
            ELSE
                UPDATE entrega_talonarios_anfitrion
                SET total_boletos_preferenciales = 0
                WHERE id = v_id;
                SET v_preferenciales = v_preferenciales - v_preferenciales_tal;
            END IF;
        END IF;

        -- Salir si ya no hay nada más que descontar
        IF v_regulares = 0 AND v_preferenciales = 0 THEN
            LEAVE read_loop;
        END IF;

    END LOOP;

    CLOSE cur;

END //

DELIMITER ;
